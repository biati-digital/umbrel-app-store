services:
  coolify-testing-host:
    init: true
    image: ghcr.io/coollabsio/coolify-testing-host:latest
    pull_policy: always
    container_name: coolify-testing-host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/data/coolify

  coolify:
    image: ghcr.io/coollabsio/coolify:latest
    # init: true
    pull_policy: always
    container_name: coolify
    restart: always
    working_dir: /var/www/html
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APP_DATA_DIR}/ssh:/var/www/html/storage/app/ssh
      - ${APP_DATA_DIR}/applications:/var/www/html/storage/app/applications
      - ${APP_DATA_DIR}/databases:/var/www/html/storage/app/databases
      - ${APP_DATA_DIR}/services:/var/www/html/storage/app/services
      - ${APP_DATA_DIR}/backups:/var/www/html/storage/app/backups
      - ${APP_DATA_DIR}/webhooks-during-maintenance:/var/www/html/storage/app/webhooks-during-maintenance
    environment:
      - APP_ID=coolify-windows-docker-desktop
      - APP_ENV=production
      - APP_NAME=Coolify
      - APP_KEY=base64:ssTlCmrIE/q7whnKMvT6DwURikg69COzGsAwFVROm80=
      - DB_USERNAME=coolify
      - DB_PASSWORD=coolify
      - REDIS_PASSWORD=coolify
      - SSL_MODE=off
      - PHP_PM_CONTROL=dynamic
      - PHP_PM_START_SERVERS=1
      - PHP_PM_MIN_SPARE_SERVERS=1
      - PHP_PM_MAX_SPARE_SERVERS=10
      - AUTOUPDATE=true
      - SELF_HOSTED=true
      - SSH_MUX_ENABLED=false
      - IS_WINDOWS_DOCKER_DESKTOP=true
      - PUSHER_APP_ID=coolify
      - PUSHER_APP_KEY=coolify
      - PUSHER_APP_SECRET=coolify
    ports:
      - ${APP_PORT:-8000}:80
    expose:
      - ${APP_PORT:-8000}
    healthcheck:
      test: curl --fail http://localhost:80/api/health || exit 1
      interval: 5s
      retries: 10
      timeout: 2s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    pull_policy: always
    container_name: coolify-db
    restart: always
    volumes:
      - ${APP_DATA_DIR}/db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: coolify
      POSTGRES_PASSWORD: coolify
      POSTGRES_DB: ${DB_DATABASE:-coolify}
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U coolify
        - '-d'
        - ${DB_DATABASE:-coolify}
      interval: 5s
      retries: 10
      timeout: 2s

  redis:
    image: redis:7-alpine
    pull_policy: always
    container_name: coolify-redis
    restart: always
    command: >-
      redis-server --save 20 1 --loglevel warning --requirepass
      coolify
    environment:
      REDIS_PASSWORD: coolify
    volumes:
      - ${APP_DATA_DIR}/redis-data:/data
    healthcheck:
      test: redis-cli ping
      interval: 5s
      retries: 10
      timeout: 2s

  soketi:
    image: ghcr.io/coollabsio/coolify-realtime:1.0.4
    pull_policy: always
    container_name: coolify-realtime
    restart: always
    ports:
      - ${SOKETI_PORT:-6001}:6001
      - '6002:6002'
    volumes:
      - ${APP_DATA_DIR}/ssh:/var/www/html/storage/app/ssh
    environment:
      APP_NAME: ${APP_NAME:-Coolify}
      SOKETI_DEBUG: ${SOKETI_DEBUG:-false}
      SOKETI_DEFAULT_APP_ID: coolify
      SOKETI_DEFAULT_APP_KEY: coolify
      SOKETI_DEFAULT_APP_SECRET: coolify
    healthcheck:
      test:
        - CMD-SHELL
        - >-
          wget -qO- http://127.0.0.1:6001/ready && wget -qO-
          http://127.0.0.1:6002/ready || exit 1
      interval: 5s
      retries: 10
      timeout: 2s